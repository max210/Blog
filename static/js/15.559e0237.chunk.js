(this.webpackJsonpblog=this.webpackJsonpblog||[]).push([[15],{176:function(n,r){n.exports="#### Ramda\u4e4b\u5e38\u89c1\u7684\u6570\u7ec4\u65b9\u6cd5\n\n\u5b66\u4e60\u4f18\u96c5\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u5e93`ramda`\uff0c\u603b\u7ed3\u4e00\u4e0b\u81ea\u5df1\u8ba4\u4e3a\u6bd4\u8f83\u5e38\u7528\u5230\u7684\u5173\u4e8e\u6570\u7ec4\u7684\u65b9\u6cd5\n\n`all`\n\n\u6570\u7ec4\u6bcf\u4e00\u9879\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de`true`, \u5426\u5219\u8fd4\u56de`false`\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\ncosnt f = item => item < 10\n\nconst newArr = R.all(f, arr)\n\nconsole.log(newArr)  // true\n```\n\n`any`\n\n\u6570\u7ec4\u5176\u4e2d\u4e00\u9879\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de`true`, \u5426\u5219\u8fd4\u56de`false`\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\ncosnt f = item => item < 3\n\nconst newArr = R.any(f, arr)\n\nconsole.log(newArr)  // true\n```\n\n`append`\n\n\u5728\u6570\u7ec4\u7684\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u8fd4\u56de\u65b0\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.append(7, arr)\n\nconsole.log(newArr)  // [1, 3, 4, 6, 7]\n```\n\n`preppend`\n\n\u5728\u6570\u7ec4\u7684\u5934\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u8fd4\u56de\u65b0\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.preppend(7, arr)\n\nconsole.log(newArr)  // [7, 1, 3, 4, 6]\n```\n\n`init`\n\n\u5220\u9664\u6570\u7ec4\u7684\u5c3e\u90e8\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u5269\u4f59\u5143\u7d20\u7684\u6570\u7ec4(`tail`:\u5220\u9664\u6570\u7ec4\u7684\u5934\u90e8\u4e00\u4e2a\u5143\u7d20)\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.init(arr)\n\nconsole.log(newArr)  // [1, 3, 4]\n```\n\n`drop`\n\n\u5220\u9664\u6570\u7ec4\u4ece\u5934\u90e8\u5f00\u59cbn\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u5269\u4f59\u5143\u7d20\u7684\u6570\u7ec4(`dropLast`:\u5220\u9664\u6570\u7ec4\u4ece\u5c3e\u90e8\u5f00\u59cbn\u4e2a\u5143\u7d20)\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.drop(2, arr)\n\nconsole.log(newArr)  // [4, 6]\n```\n\n`take`\n\n\u53d6\u51fa\u6570\u7ec4\u4ece\u5934\u90e8\u5f00\u59cbn\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u53d6\u51fa\u5143\u7d20\u7684\u6570\u7ec4(`takeLast`:\u53d6\u51fa\u6570\u7ec4\u4ece\u5c3e\u90e8\u5f00\u59cbn\u4e2a\u5143\u7d20)\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.take(2, arr)\n\nconsole.log(newArr)  // [1, 3]\n```\n\n`head`\n\n\u8fd4\u56de\u6570\u7ec4\u5934\u90e8\u7b2c\u4e00\u4e2a\u5143\u7d20(`last`:\u8fd4\u56de\u6570\u7ec4\u5c3e\u90e8\u7b2c\u4e00\u4e2a\u5143\u7d20)\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.head(arr)\n\nconsole.log(newArr)  // [1]\n```\n\n`find`\n\n\u8fd4\u56de\u4e0e\u6761\u4ef6\u76f8\u7b26\u7684\u9996\u4e2a\u5143\u7d20(`findIndex`:\u8fd4\u56de\u4e0e\u6761\u4ef6\u76f8\u7b26\u7684\u9996\u4e2a\u5143\u7d20\u7684`index`)\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\nconst f = item => item === 4\n\nconst newArr = R.find(f, arr)\n\nconsole.log(newArr)  // [1]\n```\n\n`filter`\n\n\u8fc7\u6ee4\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4(`reject`:\u8fd4\u56de\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4)\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\nconst f = item => item < 4\n\nconst newArr = R.filter(f, arr)\n\nconsole.log(newArr)  // [1, 3]\n```\n\n`sort`\n\n\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\nconst f = (a, b) => b - a\n\nconst newArr = R.sort(f, arr)\n\nconsole.log(newArr)  // [6, 4, 3, 1]\n```\n\n`reverse`\n\n\u7ffb\u8f6c\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.reverse(arr)\n\nconsole.log(newArr)  // [6, 4, 3, 1]\n```\n\n`map`\n\n\u8fd4\u56de\u7ecf\u8fc7\u6761\u4ef6\u53d8\u6362\u7684\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\nconst f = item => item * 2\n\nconst newArr = R.map(arr)\n\nconsole.log(newArr)  // [2, 6, 8, 12]\n```\n\n`forEach`\n\n\u5bf9\u6570\u7ec4\u6bcf\u4e00\u9879\u505a\u52a8\u4f5c\uff0c\u8fd4\u56de\u539f\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\nconst f = item => console.log(item * 2)\n\nconst newArr = R.forEach(arr)\n\nconsole.log(newArr)  // [1, 3, 4, 6]\n// 2\n// 6\n// 8\n// 12\n```\n\n`concat`\n\n\u8fde\u63a5\u4e24\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u65b0\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr1 = [1, 3]\nconst arr12 = [4, 6]\n\nconst newArr = R.concat(arr1, arr2)\n\nconsole.log(newArr)  // [1, 3, 4, 6]\n```\n\n`join`\n\n\u628a\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u901a\u8fc7\u5206\u9694\u7b26\u8fde\u8d77\u6765\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 6]\n\nconst newArr = R.join(arr)\n\nconsole.log(newArr)  // '1346'\n```\n\n`uniq`\n\n\u8fd4\u56de\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u6570\u7ec4\n\n```\nimport R from 'ramda'\n\nconst arr = [1, 3, 4, 4, 6]\n\nconst newArr = R.uniq(arr)\n\nconsole.log(newArr)  // [1, 3, 4, 6]\n```\n\n`slice`\n\n\u8fd4\u56de\u5f00\u59cb\u548c\u7ed3\u675f\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u5305\u62ec\u5f00\u59cb\uff0c\u4e0d\u5305\u62ec\u7ed3\u675f\n\n```\nimport R from 'ramda'\n\nconst arr1 = [1, 3, 4, 6]\n\nconst newArr = R.slice(2, 3, arr)\n\nconsole.log(newArr)  // [4]\n```\n"}}]);