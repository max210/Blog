(this.webpackJsonpblog=this.webpackJsonpblog||[]).push([[9],{170:function(n,e){n.exports="* Find the unique number\n```\nfunction findUniq(arr) {\n  let itemArr = []\n  let indexArr = []\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (itemArr.indexOf(arr[i]) === -1) {\n      itemArr.push(arr[i])\n      indexArr.push(1)\n    } else {\n      indexArr[itemArr.indexOf(arr[i])] += 1\n    }\n  }\n  const index = indexArr.indexOf(1)\n  return itemArr[index]\n}\n```\n\n* Simple Pig Latin\n```\nfunction pigIt(str){\n  let arr = str.split(' ')\n  if ((/[a-z]/).test(arr[arr.length -1])) {\n    return `${arr.map(x => `${x.slice(1)}${x.slice(0, 1)}ay`).join(' ')}`\n  } else {\n    const end = arr.pop()\n    return `${arr.map(x => `${x.slice(1)}${x.slice(0, 1)}ay`).join(' ')} ${end}`\n  }\n}\n```\n\n* A Chain adding function\n```\nfunction add(n) {\n  let tmp = n\n  const inner = n2 => {\n    tmp += n2\n    return inner\n  }\n  inner.valueOf = () => tmp\n  return inner\n}\n```\n\n* First non-repeating character\n```\nfunction firstNonRepeatingLetter(s) {\n  let numArr = []\n  let noRepeatArr = []\n  let upperArr = s.split('').map(i => i.toUpperCase())\n  upperArr.map((item, index) => {\n    if (noRepeatArr.indexOf(item) < 0) {\n      noRepeatArr.push(item)\n      numArr.push(1)\n    } else {\n      numArr[noRepeatArr.indexOf(item)] += 1\n    }\n  })\n\n  return numArr.indexOf(1) > -1 ? s[upperArr.indexOf(noRepeatArr[numArr.indexOf(1)])] : ''\n}\nconsole.log(firstNonRepeatingLetter('abaaCbc'))\n```\n\n* Pete, the baker\n```\nfunction cakes(recipe, available) {\n  let numArr = []\n  for (let recipeKey in recipe) {\n    if (available.hasOwnProperty(recipeKey)) {\n      numArr.push(parseInt(available[recipeKey] / recipe[recipeKey]))\n    } else {\n      return 0\n    }\n  }\n  return Math.min(...numArr)\n}\n```\n"}}]);